{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "wladx-z80",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#mnemonics"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#includes"
		},
		{
			"include": "#labels"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.block.wladx-z80",
					"begin": "/\\*",
					"end": "\\*/"
				},
				{
					"name": "comment.line.wladx-z80",
					"begin": ";",
					"end": "\\n"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.wladx-z80",
					"match": "^\\s*(?i:(?:\\.(table|row|data|8bit|16bit|24bit|accu|index|asm|endasm)))\\b"
				},
				{
					"name": "keyword.control.wladx-z80",
					"match": "^\\s*(?i:(?:\\.(dbrnd|dwrnd|dbcos|dbsin|dwcos|dwsin)))\\b"
				},
				{
					"name": "keyword.control.wladx-z80",
					"match": "^\\s*(?i:(?:\\.(rombanks|ramsize|emptyfill|smsheader|endsms|computesmschecksum|smstag|sdsctag)))\\b"
				},
				{
					"name": "keyword.control.wladx-z80",
					"match": "^\\s*(?i:(?:\\.(incdir|include|incbin|input|background|unbackground|fail|fopen|fread)))\\b"
				},
				{
					"name": "keyword.control.wladx-z80",
					"match": "^\\s*(?i:(?:\\.(macro|endm|shift|block|endb|bank|slot|rombanksize|org|orga)))\\b"
				},
				{
					"name": "keyword.control.wladx-z80",
					"match": "^\\s*(?i:(?:\\.(ds|dsb|dstruct|dsw|dsl|db|byt|dbm|sym|symbol|br|breakpoint|asc|asciitable|asctable|enda|dw|word|addr)))\\b"
				},
				{
					"name": "keyword.control.wladx-z80",
					"match": "^\\s*(?i:(?:\\.(define|def|equ|redefine|redef|if|ifdef|ifexists|undefine|undef|ifndef|ifdefm|ifndefm|ifeq|ifneq|ifle|ifleeq|ifgr|ifgreq|else|endif)))\\b"
				},
				{
					"name": "keyword.control.wladx-z80",
					"match": "^\\s*(?i:(?:\\.(repeat|rept|endr|enum|ende|struct|endst|memorymap|endme|rombankmap|endro)))\\b"
				},
				{
					"name": "keyword.control.wladx-z80",
					"match": "^\\s*(?i:(?:\\.(seed|section|ramsection|ends|export|print|printt|printv|outname|union|nextu|endu)))\\b"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"match": "(?i:(af'))",
					"captures": {
						"1": {
							"name": "support.type.register.wladx-z80"
						}
					}
				},
				{
					"name": "string.quoted.single.wladx-z80",
					"begin": "'",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.wladx-z80"
						}
					},
					"end": "(\\')|((?:[^\\\\\\n])$)",
					"endCaptures": {
						"1": {
							"name": "punctuation.definition.string.end.wladx-z80"
						},
						"2": {
							"name": "invalid.illegal.newline.wladx-z80"
						}
					},
					"patterns": [
						{
							"include": "#string-character-escape"
						}
					]
				},
				{
					"name": "string.quoted.double.wladx-z80",
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.wladx-z80"
						}
					},
					"end": "(\")|((?:[^\\\\\\n])$)",
					"endCaptures": {
						"1": {
							"name": "punctuation.definition.string.end.wladx-z80"
						},
						"2": {
							"name": "invalid.illegal.newline.wladx-z80"
						}
					},
					"patterns": [
						{
							"include": "#string-character-escape"
						}
					]
				}
			]
		},
		"string-character-escape": {
			"patterns": [
				{
					"name": "constant.character.escape.wladx-z80",
					"match": "\\\\(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|$)"
				}
			]
		},
		"mnemonics": {
			"patterns": [
				{
					"name": "support.type.flag.wladx-z80",
					"match": "\\b(?i:(j[pr]|call|ret))(?:\\s+(?i:([cmpz]|n[cz]|p[eo])))?\\b",
					"captures": {
						"1": {
							"name": "keyword.mnemonic.wladx-z80"
						},
						"2": {
							"name": "meta.preprocessor.flag.wladx-z80"
						}
					}
				},
				{
					"name": "support.type.flag.wladx-z80",
					"match": "\\b(?i:z80|r800|msx|gbz80|zxspectrum(?:48|128|256|512|1024)|(?:no)?(?:expand|expif|expmacro|export|intlabel|globalsymbols))\\b"
				},
				{
					"name": "keyword.mnemonic.wladx-z80",
					"match": "\\s(?i:ad[cd]|and|bit|ccf|cp|cp[di]r?|cpl|daa|dec|[de]i|djnz|exx?|halt|i[mn]|inc|in[di]r?|ld|ld[di]r?|neg|nop|or|ot[di]r|out|out[di]|pop|push|res|ret[in]|rla?|rlca?|r[lr]d|rra?|rrca?|rst|sbc|scf|set|s[lr]a|s[lr]l|slia|sl1|sub|x?or)\\s"
				},
				{
					"name": "keyword.mnemonic.wladx-z80",
					"match": "\\s(?i:swap|ldir?x|ldws|lddr?x|ldpirx|outinb|swapnib|mul|mirror|nextreg|pixel(ad|dn)|setae|te?st|bs[lr]a|bsr[lf]|brlc)\\s"
				},
				{
					"name": "support.type.register.wladx-z80",
					"match": "\\b(?i:[abcdefhlir]|ix|iy|af'?|bc|de|hl|pc|sp|ix[hlu]|iy[hlu]|[lh]x|x[lh]|[lh]y|y[lh])\\b"
				},
				{
					"name": "constant.language.operator.wladx-z80",
					"match": "(?i:\\{(?:hex[248]?|bin(?:8|16|32)?|int|eval|r[bw])?\\})"
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "invalid",
					"match": "^\\{5}"
				},
				{
					"name": "constant.numeric.integer.hexadecimal.wladx-z80",
					"match": "[\\$#][0-9a-fA-F]+"
				},
				{
					"name": "constant.numeric.integer.hexadecimal.wladx-z80",
					"match": "(\\-?[0-9a-fA-F]+[hH])\\b"
				},
				{
					"name": "constant.numeric.integer.octal.wladx-z80",
					"match": "@[0-7]+"
				},
				{
					"name": "constant.numeric.integer.octal.wladx-z80",
					"match": "\\-?[0-7]+[oO]\\b"
				},
				{
					"name": "constant.numeric.integer.octal.wladx-z80",
					"match": "(\\-?0q?[0-7]+)\\b"
				},
				{
					"name": "constant.numeric.integer.binary.wladx-z80",
					"match": "%[01]+\\b"
				},
				{
					"name": "constant.numeric.integer.binary.wladx-z80",
					"match": "\\b[01]+[bB]\\b"
				},
				{
					"name": "constant.numeric.integer.binary.wladx-z80",
					"match": "(\\-?0b[01]+)\\b"
				},
				{
					"name": "constant.numeric.integer.decimal.wladx-z80",
					"match": "\\-?\\d+"
				}
			]
		},
		"includes": {
			"patterns": [
				{
					"match": "(?i:(?<=\\s)(include)\\s+(([\"'])(?:[^\\3]+)\\3))",
					"captures": {
						"1": {
							"name": "keyword.control.wladx-z80"
						},
						"2": {
							"name": "string.modifier.import.wladx-z80"
						}
					}
				}
			]
		},
		"labels": {
			"patterns": [ 
				{
					"match": "^(\\@?[a-zA-Z0-9_]+:)(?=\\s)",
					"captures": {
						"1": {
							"name": "entity.name.function.wladx-z80"
						}
					}
				},
				{
					"match": "([a-zA-Z0-9_]+)(?=\\s)",
					"name": "variable.parameter.label.wladx-z80"
				}
			]
		}
	},
	"scopeName": "source.wladx-z80"
}